<article class="markdown-section" id="main"><h2 id="json"><a class="anchor" data-id="json" href="#/json?id=json"><span>JSON</span></a></h2><p>JSON (JavaScript Object Notation) is the de facto standard format for data exchange on the web and APIs. Its human-readable format and widespread support make it essential for data scientists working with web services, APIs, and configuration files.</p><p>For data scientists, JSON is essential when:</p><ul><li>Working with REST APIs and web services</li><li>Storing configuration files and metadata</li><li>Parsing semi-structured data from databases like MongoDB</li><li>Creating data visualization specifications (e.g., Vega-Lite)</li></ul><p>Watch this comprehensive introduction to JSON (15 min):</p><p><a href="https://youtu.be/GpOO5iKzOmY" rel="noopener" target="_blank"><img alt="JSON Crash Course" data-origin="https://i.ytimg.com/vi_webp/GpOO5iKzOmY/sddefault.webp" src="https://i.ytimg.com/vi_webp/GpOO5iKzOmY/sddefault.webp"/></a></p><p>Key concepts to understand in JSON:</p><ul><li>JSON only supports 6 data types: strings, numbers, booleans, null, arrays, and objects</li><li>You can nest data. Arrays and objects can contain other data types, including other arrays and objects</li><li>Always validate. Ensure JSON is well-formed. Comm errors: Trailing commas, missing quotes, and escape characters</li></ul><p><a href="https://jsonlines.org/" rel="noopener" target="_blank">JSON Lines</a> is a format that allows you to store multiple JSON objects in a single line.
Itâ€™s useful for logging and streaming data.</p><p>Tools you could use with JSON:</p><ul><li><a href="https://jsonlint.com/" rel="noopener" target="_blank">JSONLint</a>: Validate and format JSON</li><li><a href="https://jsoneditoronline.org/" rel="noopener" target="_blank">JSON Editor Online</a>: Visual JSON editor and formatter</li><li><a href="https://json-schema.org/" rel="noopener" target="_blank">JSON Schema</a>: Define the structure of your JSON data</li><li><a href="https://stedolan.github.io/jq/" rel="noopener" target="_blank">jq</a>: Command-line JSON processor</li></ul><p>Common Python operations with JSON:</p><pre class="language-python" data-lang="python" v-pre=""><code class="lang-python language-python"><span class="token keyword">import</span> json

<span class="token comment"># Parse JSON string</span>
json_str <span class="token operator">=</span> <span class="token string">'{"name": "Alice", "age": 30}'</span>
data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>json_str<span class="token punctuation">)</span>

<span class="token comment"># Convert to JSON string</span>
json_str <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">,</span> indent<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>

<span class="token comment"># Read JSON from file</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'data.json'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    data <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>

<span class="token comment"># Write JSON to file</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'output.json'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>data<span class="token punctuation">,</span> f<span class="token punctuation">,</span> indent<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>

<span class="token comment"># Read JSON data a Pandas DataFrame. JSON data is typically stored as an array of objects.</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token string">'data.json'</span><span class="token punctuation">)</span>

<span class="token comment"># Read JSON lines from file into a DataFrame. JSON lines are typically one line per object.</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token string">'data.jsonl'</span><span class="token punctuation">,</span> lines<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy to clipboard</span><span aria-hidden="hidden" class="error">Error</span><span aria-hidden="hidden" class="success">Copied</span><span aria-live="polite"></span></button></pre><p>Practice JSON skills with these resources:</p><ul><li><a href="https://json-generator.com/" rel="noopener" target="_blank">JSON Generator</a>: Create sample JSON data</li><li><a href="https://jsonpathfinder.com/" rel="noopener" target="_blank">JSON Path Finder</a>: Learn to navigate complex JSON structures</li><li><a href="https://www.jsonschemavalidator.net/" rel="noopener" target="_blank">JSON Schema Validator</a>: Validate JSON against schemas</li></ul><div class="docsify-pagination-container">
<div class="pagination-item pagination-item--previous">
<a href="#/css-selectors">
<div class="pagination-item-label">
<svg height="16" viewbox="0 0 10 16" width="10" xmlns="http://www.w3.org/2000/svg">
<polyline fill="none" points="8,2 2,8 8,14" vector-effect="non-scaling-stroke"></polyline>
</svg>
<span>Previous</span>
</div>
<div class="pagination-item-title">CSS Selectors</div>
<div class="pagination-item-subtitle"></div></a>
</div>
<div class="pagination-item pagination-item--next">
<a href="#/bash">
<div class="pagination-item-label">
<span>Next</span>
<svg height="16" viewbox="0 0 10 16" width="10" xmlns="http://www.w3.org/2000/svg">
<polyline fill="none" points="2,2 8,8 2,14" vector-effect="non-scaling-stroke"></polyline>
</svg>
</div>
<div class="pagination-item-title">Terminal: Bash</div>
<div class="pagination-item-subtitle"></div></a>
</div>
</div></article>