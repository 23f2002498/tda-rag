<article class="markdown-section" id="main"><h2 id="database-sqlite"><a class="anchor" data-id="database-sqlite" href="#/sqlite?id=database-sqlite"><span>Database: SQLite</span></a></h2><p>Relational databases are used to store data in a structured way. You’ll often access databases created by others for analysis.</p><p>PostgreSQL, MySQL, MS SQL, Oracle, etc. are popular databases. But the most installed database is <a href="https://www.sqlite.org/index.html" rel="noopener" target="_blank">SQLite</a>. It’s embedded into many devices and apps (e.g. your phone, browser, etc.). It’s lightweight but very scalable and powerful.</p><p>Watch these introductory videos to understand SQLite and how it’s used in Python (34 min):</p><p><a href="https://youtu.be/8Xyn8R9eKB8" rel="noopener" target="_blank"><img alt="SQLite Introduction - Beginners Guide to SQL and Databases (22 min)" data-origin="https://i.ytimg.com/vi_webp/8Xyn8R9eKB8/sddefault.webp" src="https://i.ytimg.com/vi_webp/8Xyn8R9eKB8/sddefault.webp"/></a></p><p><a href="https://youtu.be/Ohj-CqALrwk" rel="noopener" target="_blank"><img alt="SQLite Backend for Beginners - Create Quick Databases with Python and SQL (13 min)" data-origin="https://i.ytimg.com/vi_webp/Ohj-CqALrwk/sddefault.webp" src="https://i.ytimg.com/vi_webp/Ohj-CqALrwk/sddefault.webp"/></a></p><p>There are many non-relational databases (NoSQL) like <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html" rel="noopener" target="_blank">ElasticSearch</a>, <a href="https://www.mongodb.com/docs/manual/" rel="noopener" target="_blank">MongoDB</a>, <a href="https://redis.io/docs/latest/" rel="noopener" target="_blank">Redis</a>, etc. that you should know about and we may cover later.</p><p>Core Concepts:</p><pre class="language-sql" data-lang="sql" v-pre=""><code class="lang-sql language-sql"><span class="token comment">-- Create a table</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> users <span class="token punctuation">(</span>
    id <span class="token keyword">INTEGER</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    name <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
    email <span class="token keyword">TEXT</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span>
    created_at <span class="token keyword">DATETIME</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- Insert data</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token punctuation">(</span>name<span class="token punctuation">,</span> email<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>
    <span class="token punctuation">(</span><span class="token string">'Alice'</span><span class="token punctuation">,</span> <span class="token string">'alice@example.com'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">'Bob'</span><span class="token punctuation">,</span> <span class="token string">'bob@example.com'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- Query data</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> count
<span class="token keyword">FROM</span> users
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> name
<span class="token keyword">HAVING</span> count <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">-- Join tables</span>
<span class="token keyword">SELECT</span> u<span class="token punctuation">.</span>name<span class="token punctuation">,</span> o<span class="token punctuation">.</span>product
<span class="token keyword">FROM</span> users u
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> orders o <span class="token keyword">ON</span> u<span class="token punctuation">.</span>id <span class="token operator">=</span> o<span class="token punctuation">.</span>user_id
<span class="token keyword">WHERE</span> o<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">'pending'</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy to clipboard</span><span aria-hidden="hidden" class="error">Error</span><span aria-hidden="hidden" class="success">Copied</span><span aria-live="polite"></span></button></pre><p>Python Integration:</p><pre class="language-python" data-lang="python" v-pre=""><code class="lang-python language-python"><span class="token keyword">import</span> sqlite3
<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">query_database</span><span class="token punctuation">(</span>db_path<span class="token punctuation">:</span> Path<span class="token punctuation">,</span> query<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""Execute SQL query and return results as DataFrame.

    Args:
        db_path: Path to SQLite database
        query: SQL query to execute

    Returns:
        DataFrame with query results
    """</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        conn <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>db_path<span class="token punctuation">)</span>
        <span class="token keyword">return</span> pd<span class="token punctuation">.</span>read_sql_query<span class="token punctuation">(</span>query<span class="token punctuation">,</span> conn<span class="token punctuation">)</span>
    <span class="token keyword">finally</span><span class="token punctuation">:</span>
        conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Example usage</span>
db <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token string">'data.db'</span><span class="token punctuation">)</span>
df <span class="token operator">=</span> <span class="token keyword">await</span> query_database<span class="token punctuation">(</span>db<span class="token punctuation">,</span> <span class="token triple-quoted-string string">'''
    SELECT date, COUNT(*) as count
    FROM events
    GROUP BY date
'''</span><span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy to clipboard</span><span aria-hidden="hidden" class="error">Error</span><span aria-hidden="hidden" class="success">Copied</span><span aria-live="polite"></span></button></pre><p>Common Operations:</p><ol><li><p><strong>Database Management</strong></p><pre class="language-sql" data-lang="sql" v-pre=""><code class="lang-sql language-sql"><span class="token comment">-- Backup database</span>
<span class="token punctuation">.</span><span class="token keyword">backup</span> <span class="token string">'backup.db'</span>

<span class="token comment">-- Import CSV</span>
<span class="token punctuation">.</span><span class="token keyword">mode</span> csv
<span class="token punctuation">.</span><span class="token keyword">import</span> <span class="token keyword">data</span><span class="token punctuation">.</span>csv table_name

<span class="token comment">-- Export results</span>
<span class="token punctuation">.</span>headers <span class="token keyword">on</span>
<span class="token punctuation">.</span><span class="token keyword">mode</span> csv
<span class="token punctuation">.</span>output results<span class="token punctuation">.</span>csv
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">table</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy to clipboard</span><span aria-hidden="hidden" class="error">Error</span><span aria-hidden="hidden" class="success">Copied</span><span aria-live="polite"></span></button></pre></li><li><p><strong>Performance Optimization</strong></p><pre class="language-sql" data-lang="sql" v-pre=""><code class="lang-sql language-sql"><span class="token comment">-- Create index</span>
<span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_user_email <span class="token keyword">ON</span> users<span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- Analyze query</span>
<span class="token keyword">EXPLAIN</span> QUERY <span class="token keyword">PLAN</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> email <span class="token operator">LIKE</span> <span class="token string">'%@example.com'</span><span class="token punctuation">;</span>

<span class="token comment">-- Show indexes</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sqlite_master <span class="token keyword">WHERE</span> <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">'index'</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy to clipboard</span><span aria-hidden="hidden" class="error">Error</span><span aria-hidden="hidden" class="success">Copied</span><span aria-live="polite"></span></button></pre></li><li><p><strong>Data Analysis</strong></p><pre class="language-sql" data-lang="sql" v-pre=""><code class="lang-sql language-sql"><span class="token comment">-- Time series aggregation</span>
<span class="token keyword">SELECT</span>
    <span class="token keyword">date</span><span class="token punctuation">(</span><span class="token keyword">timestamp</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> events<span class="token punctuation">,</span>
    <span class="token function">AVG</span><span class="token punctuation">(</span>duration<span class="token punctuation">)</span> <span class="token keyword">as</span> avg_duration
<span class="token keyword">FROM</span> events
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">date</span><span class="token punctuation">(</span><span class="token keyword">timestamp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- Window functions</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span>
    <span class="token function">AVG</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> <span class="token keyword">OVER</span> <span class="token punctuation">(</span>
        <span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> user_id
        <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">date</span>
        <span class="token keyword">ROWS</span> <span class="token operator">BETWEEN</span> <span class="token number">3</span> <span class="token keyword">PRECEDING</span> <span class="token operator">AND</span> <span class="token keyword">CURRENT</span> <span class="token keyword">ROW</span>
    <span class="token punctuation">)</span> <span class="token keyword">as</span> moving_avg
<span class="token keyword">FROM</span> <span class="token keyword">transactions</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy to clipboard</span><span aria-hidden="hidden" class="error">Error</span><span aria-hidden="hidden" class="success">Copied</span><span aria-live="polite"></span></button></pre></li></ol><p>Tools to work with SQLite:</p><ul><li><a href="https://sqlitestudio.pl/" rel="noopener" target="_blank">SQLiteStudio</a>: Lightweight GUI</li><li><a href="https://dbeaver.io/" rel="noopener" target="_blank">DBeaver</a>: Full-featured GUI</li><li><a href="https://sqlite-utils.datasette.io/" rel="noopener" target="_blank">sqlite-utils</a>: CLI tool</li><li><a href="https://datasette.io/" rel="noopener" target="_blank">Datasette</a>: Web interface</li></ul><div class="docsify-pagination-container">
<div class="pagination-item pagination-item--previous">
<a href="#/spreadsheets">
<div class="pagination-item-label">
<svg height="16" viewbox="0 0 10 16" width="10" xmlns="http://www.w3.org/2000/svg">
<polyline fill="none" points="8,2 2,8 8,14" vector-effect="non-scaling-stroke"></polyline>
</svg>
<span>Previous</span>
</div>
<div class="pagination-item-title">Spreadsheet: Excel, Google Sheets</div>
<div class="pagination-item-subtitle"></div></a>
</div>
<div class="pagination-item pagination-item--next">
<a href="#/git">
<div class="pagination-item-label">
<span>Next</span>
<svg height="16" viewbox="0 0 10 16" width="10" xmlns="http://www.w3.org/2000/svg">
<polyline fill="none" points="2,2 8,8 2,14" vector-effect="non-scaling-stroke"></polyline>
</svg>
</div>
<div class="pagination-item-title">Version Control: Git, GitHub</div>
<div class="pagination-item-subtitle"></div></a>
</div>
</div></article>