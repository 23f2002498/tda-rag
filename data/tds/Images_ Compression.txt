<article class="markdown-section" id="main"><h2 id="images-compression"><a class="anchor" data-id="images-compression" href="#/image-compression?id=images-compression"><span>Images: Compression</span></a></h2><p>Image compression is essential when deploying apps. Often, pages have dozens of images. Image analysis runs over thousands of images. The cost of storage and bandwidth can grow over time.</p><p>Here are things you should know when you’re compressing images:</p><ul><li><strong>Image dimensions</strong> are the width and height of the image in pixels. This impacts image size a lot</li><li><strong>Lossless</strong> compression (PNG, WebP) preserves exact data</li><li><strong>Lossy</strong> compression (JPEG, WebP) removes some data for smaller files</li><li><strong>Vector</strong> formats (SVG) scale without quality loss</li><li><strong>WebP</strong> is the modern standard, supporting both lossy and lossless</li></ul><p>Here’s a rule of thumb you can use as of 2025.</p><ul><li>Use SVG if you can (i.e. if it’s vector graphics or you can convert it to one)</li><li>Else, reduce the image to as small as you can, and save as (lossy or lossless) WebP</li></ul><p>Common operations with Python:</p><pre class="language-python" data-lang="python" v-pre=""><code class="lang-python language-python"><span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">import</span> io

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">compress_image</span><span class="token punctuation">(</span>input_path<span class="token punctuation">:</span> Path<span class="token punctuation">,</span> output_path<span class="token punctuation">:</span> Path<span class="token punctuation">,</span> quality<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">85</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""Compress an image while maintaining reasonable quality."""</span>
    <span class="token keyword">with</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>input_path<span class="token punctuation">)</span> <span class="token keyword">as</span> img<span class="token punctuation">:</span>
        <span class="token comment"># Convert RGBA to RGB if needed</span>
        <span class="token keyword">if</span> img<span class="token punctuation">.</span>mode <span class="token operator">==</span> <span class="token string">'RGBA'</span><span class="token punctuation">:</span>
            img <span class="token operator">=</span> img<span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">'RGB'</span><span class="token punctuation">)</span>
        <span class="token comment"># Optimize for web</span>
        img<span class="token punctuation">.</span>save<span class="token punctuation">(</span>output_path<span class="token punctuation">,</span> <span class="token string">'WEBP'</span><span class="token punctuation">,</span> quality<span class="token operator">=</span>quality<span class="token punctuation">,</span> optimize<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># Batch process images</span>
paths <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token string">'images'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string">'*.jpg'</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> p <span class="token keyword">in</span> paths<span class="token punctuation">:</span>
    <span class="token keyword">await</span> compress_image<span class="token punctuation">(</span>p<span class="token punctuation">,</span> p<span class="token punctuation">.</span>with_suffix<span class="token punctuation">(</span><span class="token string">'.webp'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy to clipboard</span><span aria-hidden="hidden" class="error">Error</span><span aria-hidden="hidden" class="success">Copied</span><span aria-live="polite"></span></button></pre><p>Command line tools include <a href="https://developers.google.com/speed/webp/docs/cwebp" rel="noopener" target="_blank">cwebp</a>, <a href="https://pngquant.org/" rel="noopener" target="_blank">pngquant</a>, <a href="https://github.com/tjko/jpegoptim" rel="noopener" target="_blank">jpegoptim</a>, and <a href="https://imagemagick.org/" rel="noopener" target="_blank">ImageMagick</a>.</p><pre class="language-bash" data-lang="bash" v-pre=""><code class="lang-bash language-bash"><span class="token comment"># Convert to WebP</span>
cwebp <span class="token parameter variable">-q</span> <span class="token number">85</span> input.png <span class="token parameter variable">-o</span> output.webp

<span class="token comment"># Optimize PNG</span>
pngquant <span class="token parameter variable">--quality</span><span class="token operator">=</span><span class="token number">65</span>-80 image.png

<span class="token comment"># Optimize JPEG</span>
jpegoptim --strip-all --all-progressive <span class="token parameter variable">--max</span><span class="token operator">=</span><span class="token number">85</span> image.jpg

<span class="token comment"># Convert and resize</span>
convert input.jpg <span class="token parameter variable">-resize</span> 800x600 output.jpg

<span class="token comment"># Batch convert</span>
mogrify <span class="token parameter variable">-format</span> webp <span class="token parameter variable">-quality</span> <span class="token number">85</span> *.jpg</code><button class="docsify-copy-code-button"><span class="label">Copy to clipboard</span><span aria-hidden="hidden" class="error">Error</span><span aria-hidden="hidden" class="success">Copied</span><span aria-live="polite"></span></button></pre><p>Watch this video on modern image formats and optimization (15 min):</p><p><a href="https://youtu.be/F1kYBnY6mwg" rel="noopener" target="_blank"><img alt="Modern Image Optimization (15 min)" data-origin="https://i.ytimg.com/vi_webp/F1kYBnY6mwg/sddefault.webp" src="https://i.ytimg.com/vi_webp/F1kYBnY6mwg/sddefault.webp"/></a></p><p>Tools for image optimization:</p><ul><li><a href="https://squoosh.app/" rel="noopener" target="_blank">squoosh.app</a>: Browser-based compression</li><li><a href="https://imageoptim.com/" rel="noopener" target="_blank">ImageOptim</a>: GUI tool for Mac</li><li><a href="https://sharp.pixelplumbing.com/" rel="noopener" target="_blank">sharp</a>: Node.js image processing</li><li><a href="https://python-pillow.org/" rel="noopener" target="_blank">Pillow</a>: Python imaging library</li></ul><div class="docsify-pagination-container">
<div class="pagination-item pagination-item--previous">
<a href="#/markdown">
<div class="pagination-item-label">
<svg height="16" viewbox="0 0 10 16" width="10" xmlns="http://www.w3.org/2000/svg">
<polyline fill="none" points="8,2 2,8 8,14" vector-effect="non-scaling-stroke"></polyline>
</svg>
<span>Previous</span>
</div>
<div class="pagination-item-title">Markdown</div>
<div class="pagination-item-subtitle"></div></a>
</div>
<div class="pagination-item pagination-item--next">
<a href="#/github-pages">
<div class="pagination-item-label">
<span>Next</span>
<svg height="16" viewbox="0 0 10 16" width="10" xmlns="http://www.w3.org/2000/svg">
<polyline fill="none" points="2,2 8,8 2,14" vector-effect="non-scaling-stroke"></polyline>
</svg>
</div>
<div class="pagination-item-title">Static hosting: GitHub Pages</div>
<div class="pagination-item-subtitle"></div></a>
</div>
</div></article>