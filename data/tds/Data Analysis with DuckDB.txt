<article class="markdown-section" id="main"><h2 id="data-analysis-with-duckdb"><a class="anchor" data-id="data-analysis-with-duckdb" href="#/data-analysis-with-duckdb?id=data-analysis-with-duckdb"><span>Data Analysis with DuckDB</span></a></h2><p><a href="https://youtu.be/4U0GqYrET5s" rel="noopener" target="_blank"><img alt="Data Analysis with DuckDB" data-origin="https://i.ytimg.com/vi_webp/4U0GqYrET5s/sddefault.webp" src="https://i.ytimg.com/vi_webp/4U0GqYrET5s/sddefault.webp"/></a></p><p>You’ll learn how to perform data analysis using DuckDB and Pandas, covering:</p><ul><li><strong>Parquet for Data Storage</strong>: Understand why Parquet is a faster, more compact, and better-typed storage format compared to CSV, JSON, and SQLite.</li><li><strong>DuckDB Setup</strong>: Learn how to install and set up DuckDB, along with integrating it into a Jupyter notebook environment.</li><li><strong>File Format Comparisons</strong>: Compare file formats by speed and size, observing the performance difference between saving and loading data in CSV, JSON, SQLite, and Parquet.</li><li><strong>Faster Queries with DuckDB</strong>: Learn how DuckDB uses parallel processing, columnar storage, and on-disk operations to outperform Pandas in speed and memory efficiency.</li><li><strong>SQL Query Execution in DuckDB</strong>: Run SQL queries directly on Parquet files and Pandas DataFrames to compute metrics such as the number of unique flight routes delayed by certain time intervals.</li><li><strong>Memory Efficiency</strong>: Understand how DuckDB performs analytics without loading entire datasets into memory, making it highly efficient for large-scale data analysis.</li><li><strong>Mixing DuckDB and Pandas</strong>: Learn to interleave DuckDB and Pandas operations, leveraging the strengths of both tools to perform complex queries like correlations and aggregations.</li><li><strong>Ranking and Filtering Data</strong>: Use SQL and Pandas to rank arrival delays by distance and extract key insights, such as the earliest flight arrival for each route.</li><li><strong>Joining Data</strong>: Create a cost analysis by joining datasets and calculating total costs of flight delays, demonstrating DuckDB’s speed in joining and aggregating large datasets.</li></ul><p>Here are the links used in the video:</p><ul><li><a href="https://drive.google.com/file/d/1Y9XSs-LeSz-ZmnQj4OGP-Q4yDkPJrmsZ/view" rel="noopener" target="_blank">Data analysis with DuckDB - Notebook</a></li><li><a href="https://parquet.apache.org/" rel="noopener" target="_blank">Parquet file format</a> - a fast columnar storage format that’s becoming a de facto standard for big data</li><li><a href="https://duckdb.org/" rel="noopener" target="_blank">DuckDB</a> - a fast in-memory database that’s very good with large-scale analysis</li><li><a href="https://github.com/plotly/datasets/" rel="noopener" target="_blank">Plotly Datasets</a> - a collection of sample datasets for analysis. This includes the <a href="https://www.kaggle.com/datasets/usdot/flight-delays" rel="noopener" target="_blank">Kaggle Flights Dataset</a> that the notebook downloads as <a href="https://github.com/plotly/datasets/raw/master/2015_flights.parquet" rel="noopener" target="_blank">2015_flights.parquet</a></li></ul><div class="docsify-pagination-container">
<div class="pagination-item pagination-item--previous">
<a href="#/data-analysis-with-datasette">
<div class="pagination-item-label">
<svg height="16" viewbox="0 0 10 16" width="10" xmlns="http://www.w3.org/2000/svg">
<polyline fill="none" points="8,2 2,8 8,14" vector-effect="non-scaling-stroke"></polyline>
</svg>
<span>Previous</span>
</div>
<div class="pagination-item-title">Data Analysis with Datasette</div>
<div class="pagination-item-subtitle"></div></a>
</div>
<div class="pagination-item pagination-item--next">
<a href="#/data-analysis-with-chatgpt">
<div class="pagination-item-label">
<span>Next</span>
<svg height="16" viewbox="0 0 10 16" width="10" xmlns="http://www.w3.org/2000/svg">
<polyline fill="none" points="2,2 8,8 2,14" vector-effect="non-scaling-stroke"></polyline>
</svg>
</div>
<div class="pagination-item-title">Data Analysis with ChatGPT</div>
<div class="pagination-item-subtitle"></div></a>
</div>
</div></article>