<article class="markdown-section" id="main"><h2 id="bbc-weather-location-id-with-python"><a class="anchor" data-id="bbc-weather-location-id-with-python" href="#/bbc-weather-api-with-python?id=bbc-weather-location-id-with-python"><span>BBC Weather location ID with Python</span></a></h2><p><a href="https://youtu.be/IafLrvnamAw" rel="noopener" target="_blank"><img alt="BBC Weather location API with Python" data-origin="https://i.ytimg.com/vi_webp/IafLrvnamAw/sddefault.webp" src="https://i.ytimg.com/vi_webp/IafLrvnamAw/sddefault.webp"/></a></p><p>You’ll learn how to get the location ID of any city from the BBC Weather API – as a precursor to scraping weather data – covering:</p><ul><li><strong>Understanding API Calls</strong>: Learn how backend API calls work when searching for a city on the BBC weather website.</li><li><strong>Inspecting Web Interactions</strong>: Use the browser’s inspect element feature to track API calls and understand the network activity.</li><li><strong>Extracting Location IDs</strong>: Identify and extract the location ID from the API response using Python.</li><li><strong>Using Python Libraries</strong>: Import and use requests, json, and urlencode libraries to make API calls and process responses.</li><li><strong>Constructing API URLs</strong>: Create structured API URLs dynamically with constant prefixes and query parameters using urlencode.</li><li><strong>Building Functions</strong>: Develop a Python function that accepts a city name, constructs the API call, and returns the location ID.</li></ul><p>To open the browser Developer Tools on Chrome, Edge, or Firefox, you can:</p><ul><li>Right-click on the page and select “Inspect” to open the developer tools</li><li>OR: Press <code>F12</code></li><li>OR: Press <code>Ctrl+Shift+I</code> on Windows</li><li>OR: Press <code>Cmd+Opt+I</code> on Mac</li></ul><p>Here are links and references:</p><ul><li><a href="https://colab.research.google.com/drive/1-iV-tbtRicKR_HXWeu4Hi5aXJCV3QdQp" rel="noopener" target="_blank">BBC Location ID scraping - Notebook</a></li><li><a href="https://www.bbc.com/weather/5380748" rel="noopener" target="_blank">BBC Weather - Palo Alto (location ID: 5380748)</a></li><li><a href="https://locator-service.api.bbci.co.uk/locations?api_key=AGbFAKx58hyjQScCXIYrxuEwJh2W2cmv&amp;stack=aws&amp;locale=en&amp;filter=international&amp;place-types=settlement%2Cairport%2Cdistrict&amp;order=importance&amp;s=los%20angeles&amp;a=true&amp;format=json" rel="noopener" target="_blank">BBC Locator Service - Los Angeles</a></li><li>Learn about the <a href="https://docs.python-requests.org/en/latest/user/quickstart/" rel="noopener" target="_blank"><code>requests</code> package</a>. Watch <a href="https://youtu.be/tb8gHvYlCFs" rel="noopener" target="_blank">Python Requests Tutorial: Request Web Pages, Download Images, POST Data, Read JSON, and More</a></li></ul><h2 id="bbc-weather-data-with-python"><a class="anchor" data-id="bbc-weather-data-with-python" href="#/bbc-weather-api-with-python?id=bbc-weather-data-with-python"><span>BBC Weather data with Python</span></a></h2><p><a href="https://youtu.be/Uc4DgQJDRoI" rel="noopener" target="_blank"><img alt="Scrape BBC weather with Python" data-origin="https://i.ytimg.com/vi_webp/Uc4DgQJDRoI/sddefault.webp" src="https://i.ytimg.com/vi_webp/Uc4DgQJDRoI/sddefault.webp"/></a></p><p>You’ll learn how to scrape the live weather data of a city from the BBC Weather API, covering:</p><ul><li><strong>Introduction to Web Scraping</strong>: Understand the basics of web scraping and its legality.</li><li><strong>Libraries Overview</strong>: Learn the importance of <a href="https://docs.python-requests.org/en/latest/user/quickstart/" rel="noopener" target="_blank"><code>requests</code></a> and <a href="https://beautiful-soup-4.readthedocs.io/" rel="noopener" target="_blank"><code>BeautifulSoup</code></a>.</li><li><strong>Fetching HTML</strong>: Use <a href="https://docs.python-requests.org/en/latest/user/quickstart/" rel="noopener" target="_blank"><code>requests</code></a> to fetch HTML content from a web page.</li><li><strong>Parsing HTML</strong>: Utilize <a href="https://beautiful-soup-4.readthedocs.io/" rel="noopener" target="_blank"><code>BeautifulSoup</code></a> to parse and navigate the HTML content.</li><li><strong>Identifying Data</strong>: Inspect HTML elements to locate specific data (e.g., high and low temperatures).</li><li><strong>Extracting Data</strong>: Extract relevant data using <a href="https://beautiful-soup-4.readthedocs.io/" rel="noopener" target="_blank"><code>BeautifulSoup</code></a>‘s <code>find_all()</code> function.</li><li><strong>Data Cleanup</strong>: Clean extracted data to remove unwanted elements.</li><li><strong>Post-Processing</strong>: Use regular expressions to split large strings into meaningful parts.</li><li><strong>Data Structuring</strong>: Combine extracted data into a structured pandas DataFrame.</li><li><strong>Handling Special Characters</strong>: Replace unwanted characters for better data manipulation.</li><li><strong>Saving Data</strong>: Save the cleaned data into CSV and Excel formats.</li></ul><p>Here are links and references:</p><ul><li><a href="https://colab.research.google.com/drive/1-gkMzE-TKe3U_yh1v0NPn4TM687H2Hcf" rel="noopener" target="_blank">BBC Weather scraping - Notebook</a></li><li><a href="https://locator-service.api.bbci.co.uk/locations?api_key=AGbFAKx58hyjQScCXIYrxuEwJh2W2cmv&amp;stack=aws&amp;locale=en&amp;filter=international&amp;place-types=settlement%2Cairport%2Cdistrict&amp;order=importance&amp;s=mumbai&amp;a=true&amp;format=json" rel="noopener" target="_blank">BBC Locator Service - Mumbai</a></li><li><a href="https://www.bbc.com/weather/1275339" rel="noopener" target="_blank">BBC Weather - Mumbai (location ID: 1275339)</a></li><li><a href="https://weather-broker-cdn.api.bbci.co.uk/en/forecast/aggregated/1275339" rel="noopener" target="_blank">BBC Weather API - Mumbai (location ID: 1275339)</a></li><li>Learn about the <a href="https://docs.python.org/3/library/json.html" rel="noopener" target="_blank"><code>json</code> package</a>. Watch <a href="https://youtu.be/9N6a-VLBa2I" rel="noopener" target="_blank">Python Tutorial: Working with JSON Data using the json Module</a></li><li>Learn about the <a href="https://beautiful-soup-4.readthedocs.io/" rel="noopener" target="_blank"><code>BeautifulSoup</code> package</a>. Watch <a href="https://youtu.be/ng2o98k983k" rel="noopener" target="_blank">Python Tutorial: Web Scraping with BeautifulSoup and Requests</a></li><li>Learn about the <a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html" rel="noopener" target="_blank"><code>pandas</code> package</a>. Watch<ul><li><a href="https://youtu.be/ZyhVh-qRZPA" rel="noopener" target="_blank">Python Pandas Tutorial (Part 1): Getting Started with Data Analysis - Installation and Loading Data</a></li><li><a href="https://youtu.be/zmdjNSmRXF4" rel="noopener" target="_blank">Python Pandas Tutorial (Part 2): DataFrame and Series Basics - Selecting Rows and Columns</a></li></ul></li><li>Learn about the <a href="https://docs.python.org/3/library/re.html" rel="noopener" target="_blank"><code>re</code> package</a>. Watch <a href="https://youtu.be/K8L6KVGG-7o" rel="noopener" target="_blank">Python Tutorial: re Module - How to Write and Match Regular Expressions (Regex)</a></li><li>Learn about the <a href="https://docs.python.org/3/library/datetime.html" rel="noopener" target="_blank"><code>datetime</code> package</a>. Watch <a href="https://youtu.be/eirjjyP2qcQ" rel="noopener" target="_blank">Python Tutorial: Datetime Module - How to work with Dates, Times, Timedeltas, and Timezones</a></li></ul><div class="docsify-pagination-container">
<div class="pagination-item pagination-item--previous">
<a href="#/crawling-cli">
<div class="pagination-item-label">
<svg height="16" viewbox="0 0 10 16" width="10" xmlns="http://www.w3.org/2000/svg">
<polyline fill="none" points="8,2 2,8 8,14" vector-effect="non-scaling-stroke"></polyline>
</svg>
<span>Previous</span>
</div>
<div class="pagination-item-title">Crawling with the CLI</div>
<div class="pagination-item-subtitle"></div></a>
</div>
<div class="pagination-item pagination-item--next">
<a href="#/scraping-imdb-with-javascript">
<div class="pagination-item-label">
<span>Next</span>
<svg height="16" viewbox="0 0 10 16" width="10" xmlns="http://www.w3.org/2000/svg">
<polyline fill="none" points="2,2 8,8 2,14" vector-effect="non-scaling-stroke"></polyline>
</svg>
</div>
<div class="pagination-item-title">Scraping IMDb with JavaScript</div>
<div class="pagination-item-subtitle"></div></a>
</div>
</div></article>